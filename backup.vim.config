call plug#begin('~/.local/share/nvim/plugged')
  Plug 'scrooloose/nerdtree'
  Plug 'tpope/vim-fugitive'
  Plug 'reasonml-editor/vim-reason-plus'
  Plug 'christoomey/vim-tmux-navigator'
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'flazz/vim-colorschemes'
  Plug 'reasonml-editor/vim-reason-plus'
  Plug 'jparise/vim-graphql'
  Plug 'pangloss/vim-javascript'
  Plug 'maxmellon/vim-jsx-pretty'
  Plug 'mattn/emmet-vim'
  Plug 'junegunn/fzf'
  Plug 'neoclide/coc.nvim', {'branch': 'release'}
  Plug 'leafgarland/typescript-vim'
  Plug 'rescript-lang/vim-rescript'
  Plug 'peitalin/vim-jsx-typescript'
  Plug 'Exafunction/codeium.vim'
  Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
call plug#end()

let g:coc_global_extensions = ['coc-emmet', 'coc-css', 'coc-html', 'coc-json', 'coc-prettier', 'coc-tsserver', 'coc-pyright', 'coc-go', 'coc-docker', '@yaegassy/coc-tailwindcss3', 'coc-sourcekit', 'coc-phpls']

" Use tab for trigger completion with characters ahead and navigate
" NOTE: There's always complete item selected by default, you may want to enable
" no select by `"suggest.noselect": true` in your configuration file
" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by
" other plugin before putting this into your config
inoremap <silent><expr> <TAB>
      \ coc#pum#visible() ? coc#pum#next(1) :
      \ CheckBackspace() ? "\<Tab>" :
      \ coc#refresh()
inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"

" Make <CR> to accept selected completion item or notify coc.nvim to format
" <C-g>u breaks current undo, please make your own choice
inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

function! CheckBackspace() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Use K to show documentation in preview window.
nnoremap <silent> K :call <SID>show_documentation()<CR>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  elseif (coc#rpc#ready())
    call CocActionAsync('doHover')
  else
    execute '!' . &keywordprg . " " . expand('<cword>')
  endif
endfunction


" Codeium configs.
let g:airline_section_y = '{â€¦}%3{codeium#GetStatusString()}'


set updatetime=300
set nobackup
set nowritebackup
set shortmess+=c
" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
if has("nvim-0.5.0") || has("patch-8.1.1564")
  " Recently vim can merge signcolumn and number column into one
  set signcolumn=number
else
  set signcolumn=yes
endif

" set completeopt+=menuone
" set completeopt+=noinsert

"
set background=dark

let g:airline_theme = 'bubblegum'
let g:airline_powerline_fonts = 1

colorscheme k1989

set hidden 

"let g:user_emmet_leader_key=','

autocmd FileType netrw nnoremap q :bd<CR>

syntax on
set nu
set ruler 
filetype plugin on 
set tabstop=2 shiftwidth=2 expandtab 
au Filetype python setl et ts=4 sw=4
au FileType perl setl et ts=4 sw=4
au FileType fsharp setl et ts=4 sw=4
au FileType ml setl et ts=4 sw=4
au FileType re setl et ts=4 sw=4
au BufNewFile,BufRead *.webc set filetype=html

:command T NERDTree
